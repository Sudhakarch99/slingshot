function getQueryVariable(a) { for (var b = window.location.search.substring(1), c = b.split("&"), d = 0; d < c.length; d++) { var e = c[d].split("="); if (e[0] === a) return e[1] } return !1 } if (document.all && !window.setTimeout.isPolyfill) { var __nativeST__ = window.setTimeout; window.setTimeout = function (a, b) { var c = Array.prototype.slice.call(arguments, 2); return __nativeST__(a instanceof Function ? function () { a.apply(null, c) } : a, b) }, window.setTimeout.isPolyfill = !0 } if (document.all && !window.setInterval.isPolyfill) { var __nativeSI__ = window.setInterval; window.setInterval = function (a, b) { var c = Array.prototype.slice.call(arguments, 2); return __nativeSI__(a instanceof Function ? function () { a.apply(null, c) } : a, b) }, window.setInterval.isPolyfill = !0 } String.prototype.format || (String.prototype.format = function () { var a = arguments; return this.replace(/{(\d+)}/g, function (b, c) { return void 0 !== a[c] ? a[c] : b }) }); var telemetryObj = function () { var a = {}; return a.logGetTemplate = function (a) { var b = { templateName: a }; window.appInsights.trackEvent("GetLRSTemplate", b), void 0 !== window.mixpanel && window.mixpanel.track("GetLRSTemplate", { properties: this.addMixPanelProperties(b), measurements: null }) }, a.logAuthenticatedUser = function (a) { if (a) { if (void 0 !== window.mixpanel) { var b = a.split("#"); 2 === b.length ? window.mixpanel.alias(b[1]) : window.mixpanel.alias(a) } window.appInsights.setAuthenticatedUserContext(a, "") } }, a.logPageView = function () { if (void 0 !== window.mixpanel) { var b = getQueryVariable("correlationId"); b && window.mixpanel.identify(b), window.mixpanel.track("LRS Deploy Page Viewed", { page: window.location, properties: a.addMixPanelProperties(null), measurements: null }) } }, a.addMixPanelProperties = function (a) { a = a || {}, a.sitename = "functions" }, a.logDeploy = function (b) { var c = { templateName: b }; window.appInsights.trackEvent("LRSDeployStarted", { templateName: b }), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeployStarted", { page: window.location, properties: a.addMixPanelProperties(c), measurements: null }) }, a.logDeploySucceeded = function (b) { var c = { templateName: b }; window.appInsights.trackEvent("LRSDeploySucceeded", c), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeploySucceeded", { page: window.location, properties: a.addMixPanelProperties(c), measurements: null }) }, a.logDeployFailed = function (b) { var c = { templateName: b }; window.appInsights.trackEvent("LRSDeployFailed", c), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeployFailed", { page: window.location, properties: a.addMixPanelProperties(c), measurements: null }) }, a }, constantsObj = function () { var a = {}, b = function () { var a = {}; return a.pollingInterval = 2e3, a.deployMessage1Interval = 3e4, a.deployMessage2Interval = 6e4, a.deployTimeoutInterval = 75e3, a }; return a.params = b(), a }, telemetry = telemetryObj(), constants = constantsObj(); !function () { angular.module("formApp", []).filter("camelCaseToHuman", function () { return function (a) { var b = a.name.charAt(0).toUpperCase() + a.name.substr(1).replace(/[A-Z]/g, " $&"); return "" === a.defaultValue ? b + " (Optional)" : b } }).controller("FormController", ["$window", "$scope", "$location", "$http", "$timeout", function (a, b, c, d, e) { function j(a, b) { a.formData.statusMesgs.indexOf(b) < 0 && a.formData.statusMesgs.push(b) } function k(a, b) { if (b.data.operations && b.data.operations && b.data.operations.value) for (var c = b.data.operations.value, d = c.length - 1; d >= 0; d--) { var e = c[d].properties.targetResource.localizedMessage; j(a, e) } } function l(b, c) { var f, d = b.formData.subscription.subscriptionId, e = b.formData.finalResourceGroup; b.formData.portalUrl = i, b.formData.repoParamFound && (f = { appServiceName: b.formData.appServiceName }), c({ method: "get", url: "api/lrsdeployments/" + d + "/rg/" + e.name, params: f }).then(function (d) { k(b, d); var e = d.data.operations, f = null; if (e && e.value) for (var i = 0; i < e.value.length; i++) { var j = e.value[i].properties; j.statusMessage && j.statusMessage.error ? f = j.statusMessage.error.message : "Failed" === j.provisioningState && j.statusMessage && j.statusMessage.message && (f = j.statusMessage.message) } f || "Failed" === d.data.provisioningState || "Succeeded" === d.data.provisioningState ? (b.formData.deploymentSucceeded = "Succeeded" === d.data.provisioningState, b.formData.deploymentSucceeded ? (b.formData.portalUrl = g.format(b.formData.subscription.subscriptionId, b.formData.finalResourceGroup.name, b.formData.appServiceName), telemetry.logDeploySucceeded(b.formData.templateName)) : (b.formData.portalUrl = h.format(b.formData.subscription.subscriptionId, b.formData.finalResourceGroup.name, b.formData.appServiceName), telemetry.logDeployFailed(b.formData.templateName)), a.location.href = b.formData.portalUrl) : window.setTimeout(l, constants.params.pollingInterval, b, c) }, function (c) { b.formData.errorMesg = c.data.error, telemetry.logDeployFailed("getdeploymentstatus"), a.location.href = b.formData.portalUrl }) } function m() { var a = {}, c = b.formData.newResourceGroup; b.formData.finalResourceGroup = c; var d = { name: "appServiceName", value: b.formData.appServiceName }, e = { name: "appServiceLocation", value: b.formData.appServiceLocation }; return a[d.name] = { value: d.value }, c.location = e.value, { parameters: a, subscriptionId: b.formData.subscription.subscriptionId, resourceGroup: c, templateUrl: b.formData.templateNameUrl, repoUrl: sessionStorage.templateName } } function n() { var c = b.formData.subscription.subscriptionId; b.formData.portalUrl = i, b.formData.deploymentSucceeded = !1, telemetry.logDeploy(b.formData.templateName), b.formData.deployPayload = m(b.formData.params), d({ method: "post", url: "api/lrsdeployments/" + c, data: b.formData.deployPayload }).then(function (a) { window.setTimeout(l, constants.params.pollingInterval, b, d) }, function (c) { telemetry.logDeployFailed("postdeployment"), null != c.data && null != c.data.error && (b.formData.errorMesg = c.data.error, a.location.href = b.formData.portalUrl) }) } function o(b, c) { if (b.formData.templateName = getQueryVariable("templateName"), b.formData.statusMesgs = [], j(b, document.getElementById("submittingMessage").innerHTML), telemetry.logPageView(), b.formData.templateName && 0 !== b.formData.templateName.length || sessionStorage.templateName && (b.formData.templateName = sessionStorage.templateName), !b.formData.templateName) return telemetry.logDeployFailed("noTemplateName"), void (a.location.href = "https://portal.azure.com"); sessionStorage.templateName = b.formData.templateName, telemetry.logGetTemplate(b.formData.templateName), b.formData.templateName && 0 !== b.formData.templateName.length && !b.formData.subscriptions && (b.formData.statusMesgs = [], j(b, document.getElementById("submittingMessage").innerHTML), c({ method: "get", url: "api/lrstemplate", params: { templateName: b.formData.templateName } }).then(function (a) { document.getElementById("loadingMessage").style.display = "none", j(b, a.data.nextStatusMessage), b.formData.subscription = a.data.subscription, b.formData.tenants = a.data.tenants, b.formData.templateName = a.data.templateName, b.formData.appServiceName = a.data.appServiceName, b.formData.appServiceLocation = a.data.appServiceLocation, b.formData.templateNameUrl = a.data.templateUrl, b.formData.email = a.data.email, b.formData.newResourceGroup = { name: a.data.resourceGroupName, location: "" }, telemetry.logAuthenticatedUser(b.formData.email), b.formData.params = []; var c = f(); c.name = "appserviceName", c.type = "string", c.value = a.data.appServiceName, c.defaultValue = a.data.appServiceName, b.formData.params.push(c), n() }, function (a) { a.data && (b.formData.errorMesg = a.data.error) })) } b.deployTimerElapsed = !1, e(function () { b.deployTimerElapsed = !0 }, constants.params.deployTimeoutInterval), e(function () { j(b, document.getElementById("deployingMessage1").innerHTML) }, constants.params.deployMessage1Interval), e(function () { j(b, document.getElementById("deployingMessage2").innerHTML) }, constants.params.deployMessage2Interval), b.formData = {}; var f = function () { var a = {}; return a.name = null, a.type = null, a.defaultValue = null, a.value = null, a }, g = "https://portal.azure.com/#resource/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}/QuickStartSetting", h = "https://portal.azure.com/#resource/subscriptions/{0}/resourceGroups/{1}/overview", i = "https://portal.azure.com/"; o(b, d) }]) }();